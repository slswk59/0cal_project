<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member.mapper.MemberMapper">
    <resultMap id="memberResultMap" type="member.dto.MemberDTO">
        <id column="id" property="id" />
        <result column="user_name" property="userName" />
        <result column="nick_name" property="nickName" />
        <result column="user_pass" property="userPass" />
        <result column="email" property="email" />
        <result column="post" property="post" />
        <result column="address" property="address" />
        <result column="phone" property="phone" />
        <result column="date_of_birth" property="dateOfBirth" />
        <result column="gender" property="gender" />
        <result column="user_type" property="userType" />
    </resultMap>
    
    <select id="getMemberById" parameterType="java.lang.String" resultMap="memberResultMap">
        SELECT id, user_name, nick_name, user_pass, email, post, address, phone, date_of_birth, gender, user_type
        FROM Member
        WHERE id = #{id}
    </select>
    
    <select id="getMemberList" resultMap="memberResultMap">
        SELECT id, user_name, nick_name, user_pass, email, post, address, phone, date_of_birth, gender, user_type
        FROM Member
    </select>
    
    <insert id="insertMember" parameterType="com.example.dto.MemberDTO">
        INSERT INTO Member (id, user_name, nick_name, user_pass, email, post, address, phone, date_of_birth, gender, user_type)
        VALUES (#{id}, #{userName}, #{nickName}, #{userPass}, #{email}, #{post}, #{address}, #{phone}, #{dateOfBirth}, #{gender}, #{userType})
    </insert>
    
    <update id="updateMember" parameterType="com.example.dto.MemberDTO">
        UPDATE Member
        SET user_name = #{userName}, nick_name = #{nickName}, user_pass = #{userPass}, email = #{email}, post = #{post}, address = #{address}, phone = #{phone}, date_of_birth = #{dateOfBirth}, gender = #{gender}, user_type = #{userType}
        WHERE id = #{id}
    </update>
    
    <delete id="deleteMember" parameterType="java.lang.String">
        DELETE FROM Member
        WHERE id = #{id}
    </delete>
</mapper>